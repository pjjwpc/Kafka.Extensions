using System;
using System.Collections.Generic;
using System.Text;

namespace Confluent.Kafka.Extensions
{
    public class ConfigConstants
    {
        public static string BuiltInFeatures = "builtin.features";
        public static string ClientId = "client.id";
        public static string MetadataBrokerList = "metadata.broker.list";
        public static string BootstrapServers = "bootstrap.servers";
        public static string MessageMaxBytes = "message.max.bytes";
        public static string MessageCopyMaxBytes = "message.copy.max.bytes";
        public static string ReceieveMessageMaxBytes = "receive.message.max.bytes";
        public static string MaxInFlightRequestPerConnection = "max.in.flight.requests.per.connection";
        public static string MaxInFlight = "max.in.flight";
        public static string MetadataRequestTimeoutMs = "metadata.request.timeout.ms";
        public static string TopicMetadataRefreshIntervalMs = "topic.metadata.refresh.interval.ms";
        public static string MetaMaxAgeMs = "metadata.max.age.ms";
        public static string TopicMetadataRefreshFastInternvalMs = "topic.metadata.refresh.fast.interval.ms";
        public static string TopicMetadataRefreshSparse = "topic.metadata.refresh.sparse";
        public static string TopicBlacklist = "topic.blacklist";
        public static string Debug = "debug";
        public static string SocketTimeoutMs = "socket.timeout.ms";
        public static string SocketBlockingMaxMs = "socket.blocking.max.ms";
        public static string SocketSendBufferBytes = "socket.send.buffer.bytes";
        public static string SocketReceieveBufferBytes = "socket.receive.buffer.bytes";
        public static string SocketKeepSliveEnable = "socket.keepalive.enable";
        public static string SocketNagleDisable = "socket.nagle.disable";
        public static string SocketMaxFails = "socket.max.fails";
        public static string BrokerAddressTimeToLive = "broker.address.ttl";
        public static string BrokerAddressFamily = "broker.address.family";
        public static string ReconnectBackOffJitterMs = "reconnect.backoff.jitter.ms";
        public static string EnabledEvents = "enabled_events";
        public static string ThrottleCallBack = "throttle_cb";
        public static string LogCallBack = "log_cb";
        public static string LogQueue = "log.queue";
        public static string LogConnectionClose = "log.connection.close";
        public static string ConnectCallBack = "connect_cb";
        public static string OpenCallBack = "open_cb";
        public static string DefaultTopicConfig = "default_topic_conf";
        public static string DefaultTopicConfigConfluentStyle = "default.topic.config";
        public static string ApiVersionRequest = "api.version.request";
        public static string BrokerVersionFallback = "broker.version.fallback";
        public static string SSLCipherSuites = "ssl.cipher.suites";
        public static string SSLKeyPassword = "ssl.key.password";
        public static string SSLCaLocation = "ssl.ca.location";
        public static string SSLCRLLocation= "ssl.crl.location";
        public static string SASLMechanisms = "sasl.mechanisms";
        public static string SASLKerberosServiceName = "sasl.kerberos.service.name";
        public static string SASLKerberosPrincipal = "sasl.kerberos.principal";
        public static string SASLKerberosKinitCommand = "sasl.kerberos.kinit.cmd";
        public static string SASLKerberosKeyTab = "sasl.kerberos.keytab";
        public static string SASLKerberosMinTimeBeforeRelogin = "sasl.kerberos.min.time.before.relogin";
        public static string SASLUserName = "sasl.username";
        public static string SASLPassword = "sasl.password";
        public static string GroupId = "group.id";
        public static string PartitionAssignmentStrategy = "partition.assignment.strategy";
        public static string SessionTimeoutMs = "session.timeout.ms";
        public static string HeartbeatIntervalMs = "heartbeat.interval.ms";
        public static string GroupProtocolType = "group.protocol.type";
        public static string CoordinatorQueryIntervalMs = "coordinator.query.interval.ms";
        public static string EnableAutoCommit = "enable.auto.commit";
        public static string AutoCommitIntervalMs = "auto.commit.interval.ms";
        public static string EnableAutoOffsetStore = "enable.auto.offset.store";
        public static string QueuedMinMesssages = "queued.min.messages";
        public static string QueuedMaxMessagesBytes = "queued.max.messages.kbytes";
        public static string FetchWaitMaxMs = "fetch.wait.max.ms";
        public static string FetchMessageMaxBytes = "fetch.message.max.bytes";
        public static string MaxPartitionFetchBytes = "max.partition.fetch.bytes";
        public static string FetchMinBytes = "fetch.min.bytes";
        public static string FetechErrorBackoffMs = "fetch.error.backoff.ms";
        public static string OffsetStoreMethod = "offset.store.method";
        public static string ConsumeCallback = "consume_cb";
        public static string RebalanceCallback = "rebalance_cb";
        public static string OffsetCommitCallback = "offset_commit_cb";
        public static string EnablePartitionEndOfFile = "enable.partition.eof";
        public static string CheckCRCS = "check.crcs";
        public static string QueueBufferingMaxMessages = "queue.buffering.max.messages";
        public static string QueueBufferingMaxKilobytes = "queue.buffering.max.kbytes";
        public static string QueueBufferingMaxMs = "queue.buffering.max.ms";
        public static string MessageSendMaxRetries = "message.send.max.retries";
        public static string Retries = "retries";
        public static string RetryBackoffMs = "retry.backoff.ms";
        public static string CompressionCodec = "compression.codec";
        public static string BatchNumMessages = "batch.num.messages";
        public static string DeliveryReportOnlyError = "delivery.report.only.error";
        public static string DeliveryReportCallback = "dr_cb";
        public static string DeliveryReportMessageCallback = "dr_msg_cb";

    }
}
